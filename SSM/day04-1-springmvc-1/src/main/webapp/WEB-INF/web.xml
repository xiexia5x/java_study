<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
           version="3.0">
    
    <!--配置springmvc 编码过滤器-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <!--配置过滤的资源路径-->
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/**</url-pattern>
    </filter-mapping>


    <!--配置前端控制器：DispatchServlet,本质上就是一个servlet-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--
            ServletConfig sc==>cs.getInitparam("contextConfigLocation");
        -->
        <init-param>
            <!--
            contextConfigLocation:基于约定的固定写法,这样DispatcherServlet底层会根据这个名称获取springmvc的资源位置
            并加载，完成ioc容器的初始化
            -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--加载顺序-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--配置核心控制器的拦截了路径的规则-->
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--拦截所有请求，不包含jsp-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>


</web-app>
