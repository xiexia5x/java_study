<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置外部jdbc.properties文件-->
   <!-- <context:property-placeholder location="classpath:jdbc.properties"
                                  file-encoding="UTF-8"/>-->

    <!--配置数据源-->
  <!--  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.userName}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
    </bean>-->

    <!--配置会话工厂bean:spring提供的，对SqlSessionFactory封装-->
  <!--  <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        &lt;!&ndash;配置数据源&ndash;&gt;
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash;给指定包下的类取别名&ndash;&gt;
        <property name="typeAliasesPackage" value="com.heima.pojo"/>
        &lt;!&ndash; 3.2 配置驼峰命名 &ndash;&gt;
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                &lt;!&ndash;开启驼峰&ndash;&gt;
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
        &lt;!&ndash;配置插件&ndash;&gt;
        <property name="plugins">
            &lt;!&ndash;配置分页插件&ndash;&gt;
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">mysql</prop>
                            <prop key="reasonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
        &lt;!&ndash;<property name="configLocation" value="classpath:mybatisConfig.xml.bak"/>&ndash;&gt;
    </bean>-->

    <!--开启接口扫描,将接口的代理对象加入ioc容器-->
   <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.heima.dao"/>
    </bean>-->

    <!--配置事务管理器-->
   <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->

</beans>